package com.qudgar.laundryday;

import android.content.Context;
import android.graphics.Canvas;
import android.graphics.Paint;
import android.graphics.Paint.FontMetrics;
import android.graphics.Paint.Style;
import android.graphics.Rect;
import android.view.View;

public class ViewGrid extends View
{

	private final BookRoom book;
	
	private float width, height;
	private int selX, selY;
	
	private final Rect selRect = new Rect();
	
	public ViewGrid(Context context)
	{
		super(context);
		this.book = (BookRoom) context;
		setFocusable(true);
		setFocusableInTouchMode(true);
	}

	@Override
	protected void onSizeChanged(int w, int h, int oldw, int oldh) 
	{
		width = w;
		height = h/6;
		getRect(selX, selY, selRect);
		super.onSizeChanged(w, h, oldw, oldh);
	}
	
	private void getRect(int x, int y, Rect rect) 
	{
	      rect.set((int) (x * width), (int) (y * height), (int) (x
	            * width + width), (int) (y * height + height));
	}

	 @Override
	   protected void onDraw(Canvas canvas) {
	      // Draw the background...
	      Paint background = new Paint();
	      background.setColor(getResources().getColor(
	            R.color.background));
	      canvas.drawRect(0, 0, getWidth(), getHeight(), background);

	      
	      // Draw the board...
	      
	      // Define colors for the grid lines
	      Paint dark = new Paint();
	      dark.setColor(getResources().getColor(R.color.white));

	      Paint hilite = new Paint();
	      hilite.setColor(getResources().getColor(R.color.focused));

	      Paint light = new Paint();
	      light.setColor(getResources().getColor(R.color.standard));

	      // Draw the minor grid lines
	      for (int i = 0; i < 9; i++)
	      {
	         canvas.drawLine(0, i * height, getWidth(), i * height,
	               light);
	         canvas.drawLine(0, i * height + 1, getWidth(), i * height
	               + 1, hilite);
	         canvas.drawLine(i * width, 0, i * width, getHeight(),
	               light);
	         canvas.drawLine(i * width + 1, 0, i * width + 1,
	               getHeight(), hilite);
	      }

	      // Draw the major grid lines
	      for (int i = 0; i < 9; i++) 
	      {
	         if (i % 3 != 0)
	            continue;
	         canvas.drawLine(0, i * height, getWidth(), i * height,
	               dark);
	         canvas.drawLine(0, i * height + 1, getWidth(), i * height
	               + 1, hilite);
	         canvas.drawLine(i * width, 0, i * width, getHeight(), dark);
	         canvas.drawLine(i * width + 1, 0, i * width + 1,
	               getHeight(), hilite);
	      }

	      // Draw the selection...
	      Paint selected = new Paint();
	      selected.setColor(getResources().getColor(
	            R.color.pressed));
	      canvas.drawRect(selRect, selected);
	   }
	 
     
	
	
	
}
