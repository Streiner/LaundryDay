package com.qudgar.laundryday;

import android.content.Context;
import java.util.Calendar;
import android.graphics.Canvas;
import android.graphics.Paint;
import android.graphics.Paint.FontMetrics;
import android.graphics.Paint.Style;
import android.graphics.Rect;
import android.view.MotionEvent;
import android.view.View;

public class bookedCard extends View
{

   
	private final MyBookedTimes book;
	
	
	private float width, height;
	private int selX, selY;
	
	private int myGridSizeX = 10;
	private int myGridSizeY = 7;
	
	private final Rect selRect = new Rect();
	
	public bookedCard(Context context)
	{
		super(context);
		this.book = (MyBookedTimes) context;
		setFocusable(true);
		setFocusableInTouchMode(true);
	}
	

	@Override
	protected void onSizeChanged(int w, int h, int oldw, int oldh) 
	{
		width = w;
		height = h/7;
		getRect(selX, selY, selRect);
		super.onSizeChanged(w, h, oldw, oldh);
	}
	
	private void getRect(int x, int y, Rect rect) 
	{
	      rect.set((int) (x * width), (int) (y * height), (int) (x
	            * width + width), (int) (y * height + height));
	}


	@Override
	   protected void onDraw(Canvas canvas)
	 {
	      // Draw the background...
	      Paint background = new Paint();
	      background.setColor(getResources().getColor(R.color.orange));
	      canvas.drawRect(0, 0, getWidth(), getHeight(), background);
	      
	      Paint lines = new Paint();
	      lines.setColor(getResources().getColor(R.color.red));
	      
		  Paint foreground = new Paint(Paint.ANTI_ALIAS_FLAG);
		    
		  foreground.setColor(getResources().getColor(R.color.black));
		  foreground.setStyle(Style.STROKE);
		  foreground.setTextSize(height * 0.25f);
		  //foreground.setTextScaleX(width / height);
		  foreground.setTextAlign(Paint.Align.LEFT);
	      
	      for (int i = 0; i < LocalData.GetInstance().GetBookedTimeSize(); i++)
	      {
	         canvas.drawLine(0, i * height, getWidth(), i * height, lines);
	         canvas.drawLine(0, i * height + 1, getWidth(), i * height + 1, lines);
	         
	         
	         
	         canvas.drawText(LocalData.GetInstance().GetBookedDay(i), 20.0f, i * height + 30.0f, foreground);
			 foreground.setTextSize(height * 0.50f);
	         canvas.drawText(LocalData.GetInstance().GetBookedDate(i), 20.0f, i * height +85.0f, foreground);
			 foreground.setTextSize(height * 0.80f);
			 foreground.setTextAlign(Paint.Align.RIGHT);
	         canvas.drawText(LocalData.GetInstance().GetBookedPass(i), width - 20.0f, i * height +78.0f, foreground);
			 foreground.setTextSize(height * 0.25f);
			 foreground.setTextAlign(Paint.Align.LEFT);
	         
			  if (i == LocalData.GetInstance().GetBookedTimeSize()-1)
			  {
			         canvas.drawLine(0, (i+1) * height, getWidth(), (i+1) * height, lines);
			         canvas.drawLine(0, (i+1) * height + 1, getWidth(), (i+1) * height + 1, lines);
			  }
	      }
	      
	     	
	        // Draw the selection...
	        Paint selected = new Paint();
	        selected.setColor(getResources().getColor(R.color.marked));
	        canvas.drawRect(selRect, selected);
		    invalidate(selRect);
	   }

	@Override
	   public boolean onTouchEvent(MotionEvent event) {
	      if (event.getAction() != MotionEvent.ACTION_DOWN)
	         return super.onTouchEvent(event);

	      select((int) (event.getX() / width),
	            (int) (event.getY() / height));
	          
	      return true;
	   }
	 
	 private void select(int x, int y)
	 {
	     invalidate(selRect);
	      selX = Math.min(Math.max(x, 0), myGridSizeX-1);
	      selY = Math.min(Math.max(y, 0), myGridSizeY-1);
	      getRect(selX, selY, selRect);
	      CurrentSelectedRect(selX, selY);
	      
	      invalidate(selRect);
	 }
	 
	 
	 private void CurrentSelectedRect(int aSelX, int aSelY)
	 {
		 LocalData.GetInstance().DeleteBookedTime(aSelY);
	 }
	 	
	
}
